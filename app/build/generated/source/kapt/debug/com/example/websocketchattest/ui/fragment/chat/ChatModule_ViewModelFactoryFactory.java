// Generated by Dagger (https://dagger.dev).
package com.example.websocketchattest.ui.fragment.chat;

import androidx.lifecycle.ViewModelProvider;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ChatModule_ViewModelFactoryFactory implements Factory<ViewModelProvider.Factory> {
  private final ChatModule module;

  private final Provider<ChatViewModel> chatProvider;

  public ChatModule_ViewModelFactoryFactory(ChatModule module,
      Provider<ChatViewModel> chatProvider) {
    this.module = module;
    this.chatProvider = chatProvider;
  }

  @Override
  public ViewModelProvider.Factory get() {
    return viewModelFactory(module, chatProvider);
  }

  public static ChatModule_ViewModelFactoryFactory create(ChatModule module,
      Provider<ChatViewModel> chatProvider) {
    return new ChatModule_ViewModelFactoryFactory(module, chatProvider);
  }

  public static ViewModelProvider.Factory viewModelFactory(ChatModule instance,
      Provider<ChatViewModel> chatProvider) {
    return Preconditions.checkNotNull(instance.viewModelFactory(chatProvider), "Cannot return null from a non-@Nullable @Provides method");
  }
}
