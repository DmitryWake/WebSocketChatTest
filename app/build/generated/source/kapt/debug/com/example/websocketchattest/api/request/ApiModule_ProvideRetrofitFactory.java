// Generated by Dagger (https://dagger.dev).
package com.example.websocketchattest.api.request;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApiModule_ProvideRetrofitFactory implements Factory<Retrofit> {
  private final ApiModule module;

  private final Provider<OkHttpClient> clientProvider;

  public ApiModule_ProvideRetrofitFactory(ApiModule module, Provider<OkHttpClient> clientProvider) {
    this.module = module;
    this.clientProvider = clientProvider;
  }

  @Override
  public Retrofit get() {
    return provideRetrofit(module, clientProvider.get());
  }

  public static ApiModule_ProvideRetrofitFactory create(ApiModule module,
      Provider<OkHttpClient> clientProvider) {
    return new ApiModule_ProvideRetrofitFactory(module, clientProvider);
  }

  public static Retrofit provideRetrofit(ApiModule instance, OkHttpClient client) {
    return Preconditions.checkNotNull(instance.provideRetrofit(client), "Cannot return null from a non-@Nullable @Provides method");
  }
}
