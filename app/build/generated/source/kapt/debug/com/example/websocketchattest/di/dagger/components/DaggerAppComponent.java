// Generated by Dagger (https://dagger.dev).
package com.example.websocketchattest.di.dagger.components;

import androidx.lifecycle.ViewModelProvider;
import com.example.websocketchattest.api.ApiModule;
import com.example.websocketchattest.api.ApiModule_ProvideChatApiFactory;
import com.example.websocketchattest.api.ApiModule_ProvideRetrofitFactory;
import com.example.websocketchattest.api.ChatApi;
import com.example.websocketchattest.ui.fragment.chat.ChatFragmentSubcomponent;
import com.example.websocketchattest.ui.fragment.chat.ChatModule;
import com.example.websocketchattest.ui.fragment.chat.ChatModule_ViewModelFactoryFactory;
import com.example.websocketchattest.ui.fragment.chat.ChatViewModel_Factory;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerAppComponent implements AppComponent {
  private final ApiModule apiModule;

  private DaggerAppComponent(ApiModule apiModuleParam) {
    this.apiModule = apiModuleParam;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static AppComponent create() {
    return new Builder().build();
  }

  @Override
  public ChatApi getChatApi() {
    return ApiModule_ProvideChatApiFactory.provideChatApi(apiModule, ApiModule_ProvideRetrofitFactory.provideRetrofit(apiModule));}

  @Override
  public MainActivitySubcomponent getMainActivitySubComponent() {
    return new MainActivitySubcomponentImpl();
  }

  public static final class Builder {
    private ApiModule apiModule;

    private Builder() {
    }

    public Builder apiModule(ApiModule apiModule) {
      this.apiModule = Preconditions.checkNotNull(apiModule);
      return this;
    }

    public AppComponent build() {
      if (apiModule == null) {
        this.apiModule = new ApiModule();
      }
      return new DaggerAppComponent(apiModule);
    }
  }

  private final class MainActivitySubcomponentImpl implements MainActivitySubcomponent {
    private MainActivitySubcomponentImpl() {

    }

    @Override
    public ChatFragmentSubcomponent chatComponent() {
      return new ChatFragmentSubcomponentImpl();
    }

    private final class ChatFragmentSubcomponentImpl implements ChatFragmentSubcomponent {
      private final ChatModule chatModule;

      private ChatFragmentSubcomponentImpl() {
        this.chatModule = new ChatModule();
      }

      @Override
      public ViewModelProvider.Factory viewModelFactory() {
        return ChatModule_ViewModelFactoryFactory.viewModelFactory(chatModule, ChatViewModel_Factory.create());}
    }
  }
}
