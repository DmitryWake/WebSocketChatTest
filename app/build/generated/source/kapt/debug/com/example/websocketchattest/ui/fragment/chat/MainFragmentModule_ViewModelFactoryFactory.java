// Generated by Dagger (https://dagger.dev).
package com.example.websocketchattest.ui.fragment.chat;

import androidx.lifecycle.ViewModelProvider;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainFragmentModule_ViewModelFactoryFactory implements Factory<ViewModelProvider.Factory> {
  private final MainFragmentModule module;

  private final Provider<MainViewModel> mainProvider;

  public MainFragmentModule_ViewModelFactoryFactory(MainFragmentModule module,
      Provider<MainViewModel> mainProvider) {
    this.module = module;
    this.mainProvider = mainProvider;
  }

  @Override
  public ViewModelProvider.Factory get() {
    return viewModelFactory(module, mainProvider);
  }

  public static MainFragmentModule_ViewModelFactoryFactory create(MainFragmentModule module,
      Provider<MainViewModel> mainProvider) {
    return new MainFragmentModule_ViewModelFactoryFactory(module, mainProvider);
  }

  public static ViewModelProvider.Factory viewModelFactory(MainFragmentModule instance,
      Provider<MainViewModel> mainProvider) {
    return Preconditions.checkNotNull(instance.viewModelFactory(mainProvider), "Cannot return null from a non-@Nullable @Provides method");
  }
}
